name: fulltrades
services:

  # 游늷 Proxy inverso (Nginx Proxy Manager)
  proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'  # HTTP p칰blico
      - '443:443'  # HTTPS p칰blico
      - '81:81'  # Panel de administraci칩n de Nginx Proxy Manager
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx-proxy-manager/nginx-proxy-manager.json:/app/config/production.json
      - ./nginx-proxy/certbot.conf:/etc/nginx/conf.d/certbot.conf
    container_name: proxy
    networks:
      - ecommerce_net

  # 游늷 Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ecommerce_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: AqAlAUXixKwE
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ecommerce_net

  # 游늷 Panel de administraci칩n para PostgreSQL (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ecommerce.com  # Cambia esto a tu email real
      PGADMIN_DEFAULT_PASSWORD: admin123  # Cambia la contrase침a por seguridad
    ports:
      - "5050:80"  # Acceder치s a pgAdmin en http://localhost:5050
    depends_on:
      - postgres
    networks:
      - ecommerce_net
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  
  api:
    image: fulltrades:1.1.1
    build: ../fulltrades_backend
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - app:/usr/src/app
    container_name: api
    

  admin_frontend:
    image: fulltrades_admin_frontend:1.0.0
    build:
      context: ../fulltrades_erp_admin_frontend
    restart: always
    ports:
      - '3001:80' # mapeando el puerto del host a 3001
    container_name: admin_frontend
    networks:
      - ecommerce_net

  ecommerce:
    image: ecommerce:1.0.0
    build:
      context: ../admintek_erp_frontend
    restart: always
    ports:
      - '3002:80' # mapeando el puerto del host a 3002
    container_name: ecommerce
    networks:
      - ecommerce_net

# 游늷 Definici칩n de vol칰menes (para persistencia de datos)
volumes:
  postgres_data:
  pgadmin_data:
  app:


networks:
  ecommerce_net:
    driver: bridge